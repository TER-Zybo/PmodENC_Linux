// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module system_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_586_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_num_data_valid,
        img_fifo_cap,
        img_empty_n,
        img_read,
        bytePlanes_plane0_din,
        bytePlanes_plane0_num_data_valid,
        bytePlanes_plane0_fifo_cap,
        bytePlanes_plane0_full_n,
        bytePlanes_plane0_write,
        bytePlanes_plane1_din,
        bytePlanes_plane1_num_data_valid,
        bytePlanes_plane1_fifo_cap,
        bytePlanes_plane1_full_n,
        bytePlanes_plane1_write,
        trunc_ln571_1,
        VideoFormat_load,
        trunc_ln,
        icmp_ln576,
        cmp212_6,
        cmp212_5,
        cmp212_4,
        cmp212_3,
        cmp212_2,
        sub209_cast62,
        cmp212_1
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] img_dout;
input  [1:0] img_num_data_valid;
input  [1:0] img_fifo_cap;
input   img_empty_n;
output   img_read;
output  [63:0] bytePlanes_plane0_din;
input  [10:0] bytePlanes_plane0_num_data_valid;
input  [10:0] bytePlanes_plane0_fifo_cap;
input   bytePlanes_plane0_full_n;
output   bytePlanes_plane0_write;
output  [63:0] bytePlanes_plane1_din;
input  [10:0] bytePlanes_plane1_num_data_valid;
input  [10:0] bytePlanes_plane1_fifo_cap;
input   bytePlanes_plane1_full_n;
output   bytePlanes_plane1_write;
input  [12:0] trunc_ln571_1;
input  [5:0] VideoFormat_load;
input  [0:0] trunc_ln;
input  [0:0] icmp_ln576;
input  [0:0] cmp212_6;
input  [0:0] cmp212_5;
input  [0:0] cmp212_4;
input  [0:0] cmp212_3;
input  [0:0] cmp212_2;
input  [12:0] sub209_cast62;
input  [0:0] cmp212_1;

reg ap_idle;
reg img_read;
reg bytePlanes_plane0_write;
reg bytePlanes_plane1_write;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] icmp_ln586_reg_543;
reg    ap_block_state2_pp0_stage1_iter0;
reg   [0:0] and_ln605_reg_558;
reg   [0:0] and_ln605_reg_558_pp0_iter1_reg;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] or_ln590_5_reg_609;
reg    ap_predicate_op93_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    bytePlanes_plane1_blk_n;
wire    ap_block_pp0_stage1;
reg    bytePlanes_plane0_blk_n;
reg    img_blk_n;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] or_ln590_reg_574;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln590_1_reg_583;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln590_2_reg_592;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln590_3_reg_601;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln590_4_reg_605;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln590_6_reg_613;
reg   [7:0] in_pix_UV_1_reg_176;
reg   [7:0] in_pix_Y_1_reg_186;
reg   [7:0] in_pix_UV_2_reg_196;
reg   [7:0] in_pix_Y_2_reg_207;
reg   [7:0] in_pix_UV_3_reg_218;
reg   [7:0] in_pix_Y_3_reg_229;
reg   [7:0] in_pix_UV_4_reg_240;
reg   [7:0] in_pix_Y_4_reg_251;
reg   [7:0] in_pix_UV_5_reg_262;
reg   [7:0] in_pix_Y_5_reg_273;
reg   [7:0] in_pix_UV_6_reg_284;
reg   [7:0] in_pix_Y_6_reg_295;
reg    ap_predicate_op52_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op68_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_predicate_op86_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg    ap_predicate_op60_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op79_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage7_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op100_read_state9;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln586_fu_362_p2;
wire   [0:0] cmp210_fu_378_p2;
reg   [0:0] cmp210_reg_547;
wire   [0:0] and_ln605_fu_390_p2;
wire   [7:0] in_pix_Y_fu_401_p1;
reg   [7:0] in_pix_Y_reg_562;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] in_pix_UV_reg_568;
wire   [0:0] or_ln590_fu_405_p2;
wire   [7:0] trunc_ln591_fu_409_p1;
wire   [0:0] or_ln590_1_fu_413_p2;
wire   [7:0] trunc_ln591_1_fu_417_p1;
wire   [0:0] or_ln590_2_fu_421_p2;
wire   [7:0] trunc_ln591_3_fu_425_p1;
wire   [0:0] or_ln590_3_fu_429_p2;
wire   [0:0] or_ln590_4_fu_433_p2;
wire   [0:0] or_ln590_5_fu_437_p2;
wire   [0:0] or_ln590_6_fu_441_p2;
wire   [7:0] trunc_ln591_5_fu_445_p1;
wire   [7:0] trunc_ln591_7_fu_449_p1;
wire   [7:0] trunc_ln591_9_fu_453_p1;
wire   [7:0] trunc_ln591_11_fu_457_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_1_reg_176;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_186;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_196;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_207;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_218;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_229;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_240;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_251;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_5_reg_262;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_5_reg_273;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_6_reg_284;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_284;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_6_reg_295;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_295;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_7_reg_306;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_UV_7_reg_306;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_7_reg_316;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_Y_7_reg_316;
reg   [12:0] x_fu_86;
wire   [12:0] x_2_fu_368_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_x_1;
reg    ap_block_pp0_stage1_01001;
wire   [13:0] zext_ln586_fu_374_p1;
wire  signed [13:0] sub209_cast62_cast_fu_350_p1;
wire   [0:0] icmp_ln605_fu_384_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_670;
reg    ap_condition_674;
reg    ap_condition_678;
reg    ap_condition_682;
reg    ap_condition_685;
reg    ap_condition_689;
reg    ap_condition_310;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

system_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_670)) begin
        if ((or_ln590_1_reg_583 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_196 <= ap_phi_reg_pp0_iter0_in_pix_UV_1_reg_176;
        end else if ((or_ln590_1_reg_583 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_196 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_674)) begin
        if ((or_ln590_2_reg_592 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_218 <= ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_196;
        end else if ((or_ln590_2_reg_592 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_218 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_678)) begin
        if ((or_ln590_3_reg_601 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_240 <= ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_218;
        end else if ((or_ln590_3_reg_601 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_240 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_682)) begin
        if ((or_ln590_4_reg_605 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_5_reg_262 <= ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_240;
        end else if ((or_ln590_4_reg_605 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_5_reg_262 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_689)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_186 <= in_pix_Y_fu_401_p1;
        end else if ((1'b1 == ap_condition_685)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_186 <= trunc_ln591_fu_409_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_670)) begin
        if ((or_ln590_1_reg_583 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_207 <= ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_186;
        end else if ((or_ln590_1_reg_583 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_207 <= trunc_ln591_1_fu_417_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_674)) begin
        if ((or_ln590_2_reg_592 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_229 <= ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_207;
        end else if ((or_ln590_2_reg_592 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_229 <= trunc_ln591_3_fu_425_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_678)) begin
        if ((or_ln590_3_reg_601 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_251 <= ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_229;
        end else if ((or_ln590_3_reg_601 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_251 <= trunc_ln591_5_fu_445_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_682)) begin
        if ((or_ln590_4_reg_605 == 1'd0)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_5_reg_273 <= ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_251;
        end else if ((or_ln590_4_reg_605 == 1'd1)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_5_reg_273 <= trunc_ln591_7_fu_449_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_310)) begin
        if (((or_ln590_5_reg_609 == 1'd0) & (icmp_ln586_reg_543 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_284 <= ap_phi_reg_pp0_iter0_in_pix_UV_5_reg_262;
        end else if (((or_ln590_5_reg_609 == 1'd1) & (icmp_ln586_reg_543 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_284 <= {{img_dout[15:8]}};
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_284 <= ap_phi_reg_pp0_iter0_in_pix_UV_6_reg_284;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_6_reg_613 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_UV_7_reg_306 <= ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_284;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_6_reg_613 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_UV_7_reg_306 <= {{img_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_in_pix_UV_7_reg_306 <= ap_phi_reg_pp0_iter0_in_pix_UV_7_reg_306;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_310)) begin
        if (((or_ln590_5_reg_609 == 1'd0) & (icmp_ln586_reg_543 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_295 <= ap_phi_reg_pp0_iter0_in_pix_Y_5_reg_273;
        end else if (((or_ln590_5_reg_609 == 1'd1) & (icmp_ln586_reg_543 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_295 <= trunc_ln591_9_fu_453_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_295 <= ap_phi_reg_pp0_iter0_in_pix_Y_6_reg_295;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_6_reg_613 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_Y_7_reg_316 <= ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_295;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_6_reg_613 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_Y_7_reg_316 <= trunc_ln591_11_fu_457_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_in_pix_Y_7_reg_316 <= ap_phi_reg_pp0_iter0_in_pix_Y_7_reg_316;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln586_fu_362_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_86 <= x_2_fu_368_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_86 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln586_fu_362_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln605_reg_558 <= and_ln605_fu_390_p2;
        cmp210_reg_547 <= cmp210_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln605_reg_558_pp0_iter1_reg <= and_ln605_reg_558;
        icmp_ln586_reg_543 <= icmp_ln586_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln586_reg_543 == 1'd0) & (or_ln590_fu_405_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln590_reg_574 == 1'd1)))) begin
        ap_phi_reg_pp0_iter0_in_pix_UV_1_reg_176 <= {{img_dout[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_pix_UV_1_reg_176 <= ap_phi_reg_pp0_iter0_in_pix_UV_1_reg_176;
        in_pix_Y_1_reg_186 <= ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_186;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        in_pix_UV_2_reg_196 <= ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_196;
        in_pix_Y_2_reg_207 <= ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_207;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        in_pix_UV_3_reg_218 <= ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_218;
        in_pix_Y_3_reg_229 <= ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_229;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        in_pix_UV_4_reg_240 <= ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_240;
        in_pix_Y_4_reg_251 <= ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_251;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        in_pix_UV_5_reg_262 <= ap_phi_reg_pp0_iter0_in_pix_UV_5_reg_262;
        in_pix_Y_5_reg_273 <= ap_phi_reg_pp0_iter0_in_pix_Y_5_reg_273;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_pix_UV_6_reg_284 <= ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_284;
        in_pix_Y_6_reg_295 <= ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_295;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_pix_UV_reg_568 <= {{img_dout[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln586_reg_543 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_pix_Y_reg_562 <= in_pix_Y_fu_401_p1;
        or_ln590_reg_574 <= or_ln590_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln586_reg_543 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln590_1_reg_583 <= or_ln590_1_fu_413_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln586_reg_543 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln590_2_reg_592 <= or_ln590_2_fu_421_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln586_reg_543 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln590_3_reg_601 <= or_ln590_3_fu_429_p2;
        or_ln590_4_reg_605 <= or_ln590_4_fu_433_p2;
        or_ln590_5_reg_609 <= or_ln590_5_fu_437_p2;
        or_ln590_6_reg_613 <= or_ln590_6_fu_441_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln586_reg_543 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_86;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane0_blk_n = bytePlanes_plane0_full_n;
    end else begin
        bytePlanes_plane0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane0_write = 1'b1;
    end else begin
        bytePlanes_plane0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'd0 == and_ln605_reg_558_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane1_blk_n = bytePlanes_plane1_full_n;
    end else begin
        bytePlanes_plane1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln605_reg_558_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane1_write = 1'b1;
    end else begin
        bytePlanes_plane1_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op93_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln590_6_reg_613 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln590_4_reg_605 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln590_3_reg_601 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln590_2_reg_592 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln590_1_reg_583 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (icmp_ln586_reg_543 == 
    1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln590_reg_574 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op93_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op100_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op79_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op60_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op86_read_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op68_read_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) 
    | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op52_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln605_fu_390_p2 = (trunc_ln & icmp_ln605_fu_384_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op100_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op100_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_plane0_full_n == 1'b0) | ((bytePlanes_plane1_full_n == 1'b0) & (1'd0 == and_ln605_reg_558_pp0_iter1_reg)))) | ((icmp_ln586_reg_543 == 1'd0) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_plane0_full_n == 1'b0) | ((bytePlanes_plane1_full_n == 1'b0) & (1'd0 == and_ln605_reg_558_pp0_iter1_reg)))) | ((icmp_ln586_reg_543 == 1'd0) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((bytePlanes_plane0_full_n == 1'b0) | ((bytePlanes_plane1_full_n == 1'b0) & (1'd0 == and_ln605_reg_558_pp0_iter1_reg)))) | ((icmp_ln586_reg_543 == 1'd0) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op52_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op52_read_state3 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op60_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op60_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op68_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op68_read_state5 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((img_empty_n == 1'b0) & (ap_predicate_op79_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((img_empty_n == 1'b0) & (ap_predicate_op79_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op86_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op86_read_state7 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_predicate_op93_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_predicate_op93_read_state8 == 1'b1) & (img_empty_n == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = ((bytePlanes_plane0_full_n == 1'b0) | ((bytePlanes_plane1_full_n == 1'b0) & (1'd0 == and_ln605_reg_558_pp0_iter1_reg)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((icmp_ln586_reg_543 == 1'd0) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op52_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op60_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op68_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op79_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op86_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op93_read_state8 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((img_empty_n == 1'b0) & (ap_predicate_op100_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_310 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_670 = ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_674 = ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_678 = ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_682 = ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln586_reg_543 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

always @ (*) begin
    ap_condition_685 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln590_reg_574 == 1'd1));
end

always @ (*) begin
    ap_condition_689 = ((1'b0 == ap_block_pp0_stage1_11001) & (or_ln590_fu_405_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_in_pix_UV_6_reg_284 = 'bx;

assign ap_phi_reg_pp0_iter0_in_pix_UV_7_reg_306 = 'bx;

assign ap_phi_reg_pp0_iter0_in_pix_Y_6_reg_295 = 'bx;

assign ap_phi_reg_pp0_iter0_in_pix_Y_7_reg_316 = 'bx;

always @ (*) begin
    ap_predicate_op100_read_state9 = ((icmp_ln586_reg_543 == 1'd0) & (or_ln590_6_reg_613 == 1'd1));
end

always @ (*) begin
    ap_predicate_op52_read_state3 = ((icmp_ln586_reg_543 == 1'd0) & (or_ln590_reg_574 == 1'd1));
end

always @ (*) begin
    ap_predicate_op60_read_state4 = ((icmp_ln586_reg_543 == 1'd0) & (or_ln590_1_reg_583 == 1'd1));
end

always @ (*) begin
    ap_predicate_op68_read_state5 = ((icmp_ln586_reg_543 == 1'd0) & (or_ln590_2_reg_592 == 1'd1));
end

always @ (*) begin
    ap_predicate_op79_read_state6 = ((icmp_ln586_reg_543 == 1'd0) & (or_ln590_3_reg_601 == 1'd1));
end

always @ (*) begin
    ap_predicate_op86_read_state7 = ((icmp_ln586_reg_543 == 1'd0) & (or_ln590_4_reg_605 == 1'd1));
end

always @ (*) begin
    ap_predicate_op93_read_state8 = ((or_ln590_5_reg_609 == 1'd1) & (icmp_ln586_reg_543 == 1'd0));
end

assign bytePlanes_plane0_din = {{{{{{{{ap_phi_reg_pp0_iter1_in_pix_Y_7_reg_316}, {in_pix_Y_6_reg_295}}, {in_pix_Y_5_reg_273}}, {in_pix_Y_4_reg_251}}, {in_pix_Y_3_reg_229}}, {in_pix_Y_2_reg_207}}, {in_pix_Y_1_reg_186}}, {in_pix_Y_reg_562}};

assign bytePlanes_plane1_din = {{{{{{{{ap_phi_reg_pp0_iter1_in_pix_UV_7_reg_306}, {in_pix_UV_6_reg_284}}, {in_pix_UV_5_reg_262}}, {in_pix_UV_4_reg_240}}, {in_pix_UV_3_reg_218}}, {in_pix_UV_2_reg_196}}, {in_pix_UV_1_reg_176}}, {in_pix_UV_reg_568}};

assign cmp210_fu_378_p2 = (($signed(zext_ln586_fu_374_p1) < $signed(sub209_cast62_cast_fu_350_p1)) ? 1'b1 : 1'b0);

assign icmp_ln586_fu_362_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln571_1) ? 1'b1 : 1'b0);

assign icmp_ln605_fu_384_p2 = ((VideoFormat_load == 6'd19) ? 1'b1 : 1'b0);

assign in_pix_Y_fu_401_p1 = img_dout[7:0];

assign or_ln590_1_fu_413_p2 = (cmp212_2 | cmp210_reg_547);

assign or_ln590_2_fu_421_p2 = (cmp212_3 | cmp210_reg_547);

assign or_ln590_3_fu_429_p2 = (cmp212_4 | cmp210_reg_547);

assign or_ln590_4_fu_433_p2 = (cmp212_5 | cmp210_reg_547);

assign or_ln590_5_fu_437_p2 = (cmp212_6 | cmp210_reg_547);

assign or_ln590_6_fu_441_p2 = (icmp_ln576 | cmp210_reg_547);

assign or_ln590_fu_405_p2 = (cmp212_1 | cmp210_reg_547);

assign sub209_cast62_cast_fu_350_p1 = $signed(sub209_cast62);

assign trunc_ln591_11_fu_457_p1 = img_dout[7:0];

assign trunc_ln591_1_fu_417_p1 = img_dout[7:0];

assign trunc_ln591_3_fu_425_p1 = img_dout[7:0];

assign trunc_ln591_5_fu_445_p1 = img_dout[7:0];

assign trunc_ln591_7_fu_449_p1 = img_dout[7:0];

assign trunc_ln591_9_fu_453_p1 = img_dout[7:0];

assign trunc_ln591_fu_409_p1 = img_dout[7:0];

assign x_2_fu_368_p2 = (ap_sig_allocacmp_x_1 + 13'd1);

assign zext_ln586_fu_374_p1 = ap_sig_allocacmp_x_1;

endmodule //system_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_586_8
