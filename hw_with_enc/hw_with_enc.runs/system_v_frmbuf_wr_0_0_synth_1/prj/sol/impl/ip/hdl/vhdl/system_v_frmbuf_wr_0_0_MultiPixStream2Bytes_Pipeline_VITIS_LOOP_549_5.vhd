-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_549_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    img_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_empty_n : IN STD_LOGIC;
    img_read : OUT STD_LOGIC;
    bytePlanes_plane0_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    bytePlanes_plane0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    bytePlanes_plane0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    bytePlanes_plane0_full_n : IN STD_LOGIC;
    bytePlanes_plane0_write : OUT STD_LOGIC;
    trunc_ln534_1 : IN STD_LOGIC_VECTOR (12 downto 0);
    icmp_ln539 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp121_2 : IN STD_LOGIC_VECTOR (0 downto 0);
    sub118_cast59 : IN STD_LOGIC_VECTOR (12 downto 0);
    cmp121_1 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of system_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_549_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal icmp_ln549_reg_297 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal or_ln554_1_reg_324 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op45_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal bytePlanes_plane0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal img_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal or_ln554_reg_320 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_ln554_2_reg_328 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_135_reg_117 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_136_reg_127 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_133_reg_137 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_134_reg_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op52_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln549_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp119_fu_217_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp119_reg_301 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln555_fu_228_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln555_reg_308 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal trunc_ln555_1_reg_314 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln554_fu_232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln554_1_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln554_2_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln555_2_fu_244_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_predicate_op38_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal trunc_ln555_4_fu_248_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal trunc_ln555_6_fu_252_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_phi_reg_pp0_iter0_empty_135_reg_117 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_136_reg_127 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_133_reg_137 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_133_reg_137 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_134_reg_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_134_reg_148 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_reg_159 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_reg_159 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_132_reg_169 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_132_reg_169 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_1_fu_70 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_3_fu_207_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal zext_ln549_fu_213_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub118_cast59_cast_fu_189_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_384 : BOOLEAN;
    signal ap_condition_387 : BOOLEAN;
    signal ap_condition_211 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component system_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component system_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_empty_136_reg_127_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_387)) then 
                    ap_phi_reg_pp0_iter0_empty_136_reg_127 <= trunc_ln555_fu_228_p1;
                elsif ((ap_const_boolean_1 = ap_condition_384)) then 
                    ap_phi_reg_pp0_iter0_empty_136_reg_127 <= trunc_ln555_2_fu_244_p1;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_132_reg_169_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln554_2_reg_328 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_empty_132_reg_169 <= ap_phi_reg_pp0_iter1_empty_134_reg_148;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln554_2_reg_328 = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter1_empty_132_reg_169 <= trunc_ln555_6_fu_252_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter1_empty_132_reg_169 <= ap_phi_reg_pp0_iter0_empty_132_reg_169;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_133_reg_137_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_211)) then
                if (((or_ln554_1_reg_324 = ap_const_lv1_0) and (icmp_ln549_reg_297 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_133_reg_137 <= ap_phi_reg_pp0_iter0_empty_135_reg_117;
                elsif (((or_ln554_1_reg_324 = ap_const_lv1_1) and (icmp_ln549_reg_297 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_133_reg_137 <= img_dout(15 downto 8);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_133_reg_137 <= ap_phi_reg_pp0_iter0_empty_133_reg_137;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_134_reg_148_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_211)) then
                if (((or_ln554_1_reg_324 = ap_const_lv1_0) and (icmp_ln549_reg_297 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_134_reg_148 <= ap_phi_reg_pp0_iter0_empty_136_reg_127;
                elsif (((or_ln554_1_reg_324 = ap_const_lv1_1) and (icmp_ln549_reg_297 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_134_reg_148 <= trunc_ln555_4_fu_248_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_134_reg_148 <= ap_phi_reg_pp0_iter0_empty_134_reg_148;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_reg_159_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln554_2_reg_328 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_empty_reg_159 <= ap_phi_reg_pp0_iter1_empty_133_reg_137;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln554_2_reg_328 = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter1_empty_reg_159 <= img_dout(15 downto 8);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter1_empty_reg_159 <= ap_phi_reg_pp0_iter0_empty_reg_159;
            end if; 
        end if;
    end process;

    x_1_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln549_fu_201_p2 = ap_const_lv1_0))) then 
                    x_1_fu_70 <= x_3_fu_207_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_1_fu_70 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln554_reg_320 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln554_fu_232_p2 = ap_const_lv1_0)))) then
                ap_phi_reg_pp0_iter0_empty_135_reg_117 <= img_dout(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln549_fu_201_p2 = ap_const_lv1_0))) then
                cmp119_reg_301 <= cmp119_fu_217_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_133_reg_137 <= ap_phi_reg_pp0_iter1_empty_133_reg_137;
                empty_134_reg_148 <= ap_phi_reg_pp0_iter1_empty_134_reg_148;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                empty_135_reg_117 <= ap_phi_reg_pp0_iter0_empty_135_reg_117;
                empty_136_reg_127 <= ap_phi_reg_pp0_iter0_empty_136_reg_127;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln549_reg_297 <= icmp_ln549_fu_201_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                or_ln554_1_reg_324 <= or_ln554_1_fu_236_p2;
                or_ln554_2_reg_328 <= or_ln554_2_fu_240_p2;
                or_ln554_reg_320 <= or_ln554_fu_232_p2;
                trunc_ln555_reg_308 <= trunc_ln555_fu_228_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                trunc_ln555_1_reg_314 <= img_dout(15 downto 8);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter0_stage1, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, img_empty_n, ap_predicate_op52_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= ((img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op52_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, img_empty_n, ap_predicate_op52_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= ((img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op52_read_state5 = ap_const_boolean_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, img_empty_n, icmp_ln549_reg_297, bytePlanes_plane0_full_n)
    begin
                ap_block_pp0_stage1_01001 <= (((bytePlanes_plane0_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln549_reg_297 = ap_const_lv1_0) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, img_empty_n, icmp_ln549_reg_297, bytePlanes_plane0_full_n)
    begin
                ap_block_pp0_stage1_11001 <= (((bytePlanes_plane0_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln549_reg_297 = ap_const_lv1_0) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, img_empty_n, icmp_ln549_reg_297, bytePlanes_plane0_full_n)
    begin
                ap_block_pp0_stage1_subdone <= (((bytePlanes_plane0_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln549_reg_297 = ap_const_lv1_0) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_empty_n, ap_predicate_op38_read_state3)
    begin
                ap_block_pp0_stage2_11001 <= ((img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op38_read_state3 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_empty_n, ap_predicate_op38_read_state3)
    begin
                ap_block_pp0_stage2_subdone <= ((img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op38_read_state3 = ap_const_boolean_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_empty_n, ap_predicate_op45_read_state4)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_predicate_op45_read_state4 = ap_const_boolean_1) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_empty_n, ap_predicate_op45_read_state4)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_predicate_op45_read_state4 = ap_const_boolean_1) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(img_empty_n, icmp_ln549_reg_297)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((icmp_ln549_reg_297 = ap_const_lv1_0) and (img_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(img_empty_n, ap_predicate_op38_read_state3)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((img_empty_n = ap_const_logic_0) and (ap_predicate_op38_read_state3 = ap_const_boolean_1));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(img_empty_n, ap_predicate_op45_read_state4)
    begin
                ap_block_state4_pp0_stage3_iter0 <= ((ap_predicate_op45_read_state4 = ap_const_boolean_1) and (img_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage0_iter1_assign_proc : process(img_empty_n, ap_predicate_op52_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((img_empty_n = ap_const_logic_0) and (ap_predicate_op52_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_state6_pp0_stage1_iter1_assign_proc : process(bytePlanes_plane0_full_n)
    begin
                ap_block_state6_pp0_stage1_iter1 <= (bytePlanes_plane0_full_n = ap_const_logic_0);
    end process;


    ap_condition_211_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
                ap_condition_211 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_384_assign_proc : process(ap_CS_fsm_pp0_stage2, or_ln554_reg_320, ap_block_pp0_stage2_11001)
    begin
                ap_condition_384 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln554_reg_320 = ap_const_lv1_1));
    end process;


    ap_condition_387_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, or_ln554_fu_232_p2)
    begin
                ap_condition_387 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln554_fu_232_p2 = ap_const_lv1_0));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln549_reg_297, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (icmp_ln549_reg_297 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;
    ap_phi_reg_pp0_iter0_empty_132_reg_169 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_133_reg_137 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_134_reg_148 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_reg_159 <= "XXXXXXXX";

    ap_predicate_op38_read_state3_assign_proc : process(icmp_ln549_reg_297, or_ln554_reg_320)
    begin
                ap_predicate_op38_read_state3 <= ((icmp_ln549_reg_297 = ap_const_lv1_0) and (or_ln554_reg_320 = ap_const_lv1_1));
    end process;


    ap_predicate_op45_read_state4_assign_proc : process(icmp_ln549_reg_297, or_ln554_1_reg_324)
    begin
                ap_predicate_op45_read_state4 <= ((or_ln554_1_reg_324 = ap_const_lv1_1) and (icmp_ln549_reg_297 = ap_const_lv1_0));
    end process;


    ap_predicate_op52_read_state5_assign_proc : process(icmp_ln549_reg_297, or_ln554_2_reg_328)
    begin
                ap_predicate_op52_read_state5 <= ((icmp_ln549_reg_297 = ap_const_lv1_0) and (or_ln554_2_reg_328 = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_1_fu_70, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_x <= x_1_fu_70;
        end if; 
    end process;


    bytePlanes_plane0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, bytePlanes_plane0_full_n, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            bytePlanes_plane0_blk_n <= bytePlanes_plane0_full_n;
        else 
            bytePlanes_plane0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bytePlanes_plane0_din <= (((((((ap_phi_reg_pp0_iter1_empty_132_reg_169 & ap_phi_reg_pp0_iter1_empty_reg_159) & empty_134_reg_148) & empty_133_reg_137) & empty_136_reg_127) & empty_135_reg_117) & trunc_ln555_reg_308) & trunc_ln555_1_reg_314);

    bytePlanes_plane0_write_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            bytePlanes_plane0_write <= ap_const_logic_1;
        else 
            bytePlanes_plane0_write <= ap_const_logic_0;
        end if; 
    end process;

    cmp119_fu_217_p2 <= "1" when (signed(zext_ln549_fu_213_p1) < signed(sub118_cast59_cast_fu_189_p1)) else "0";
    icmp_ln549_fu_201_p2 <= "1" when (ap_sig_allocacmp_x = trunc_ln534_1) else "0";

    img_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, img_empty_n, icmp_ln549_reg_297, ap_CS_fsm_pp0_stage3, ap_predicate_op45_read_state4, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, or_ln554_reg_320, ap_block_pp0_stage3, ap_block_pp0_stage0, or_ln554_2_reg_328)
    begin
        if ((((ap_predicate_op45_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln554_2_reg_328 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln554_reg_320 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            img_blk_n <= img_empty_n;
        else 
            img_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln549_reg_297, ap_CS_fsm_pp0_stage3, ap_predicate_op45_read_state4, ap_CS_fsm_pp0_stage2, ap_predicate_op52_read_state5, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_predicate_op38_read_state3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_predicate_op45_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_predicate_op38_read_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln549_reg_297 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op52_read_state5 = ap_const_boolean_1)))) then 
            img_read <= ap_const_logic_1;
        else 
            img_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln554_1_fu_236_p2 <= (cmp121_2 or cmp119_reg_301);
    or_ln554_2_fu_240_p2 <= (icmp_ln539 or cmp119_reg_301);
    or_ln554_fu_232_p2 <= (cmp121_1 or cmp119_reg_301);
        sub118_cast59_cast_fu_189_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub118_cast59),14));

    trunc_ln555_2_fu_244_p1 <= img_dout(8 - 1 downto 0);
    trunc_ln555_4_fu_248_p1 <= img_dout(8 - 1 downto 0);
    trunc_ln555_6_fu_252_p1 <= img_dout(8 - 1 downto 0);
    trunc_ln555_fu_228_p1 <= img_dout(8 - 1 downto 0);
    x_3_fu_207_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x) + unsigned(ap_const_lv13_1));
    zext_ln549_fu_213_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x),14));
end behav;
