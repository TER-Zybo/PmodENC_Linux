-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity system_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_511_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    img_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    img_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    img_empty_n : IN STD_LOGIC;
    img_read : OUT STD_LOGIC;
    bytePlanes_plane0_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    bytePlanes_plane0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    bytePlanes_plane0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    bytePlanes_plane0_full_n : IN STD_LOGIC;
    bytePlanes_plane0_write : OUT STD_LOGIC;
    trunc_ln496_1 : IN STD_LOGIC_VECTOR (12 downto 0);
    icmp_ln501 : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp43_2 : IN STD_LOGIC_VECTOR (0 downto 0);
    sub40_cast56 : IN STD_LOGIC_VECTOR (12 downto 0);
    cmp43_1 : IN STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of system_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_511_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal icmp_ln511_reg_292 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal or_ln516_1_reg_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op44_read_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal bytePlanes_plane0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal img_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal or_ln516_reg_314 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_ln516_2_reg_322 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_140_reg_117 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_138_reg_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_139_reg_147 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op52_read_state5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln511_fu_199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp41_fu_215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp41_reg_296 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_read_reg_303 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal or_ln516_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln516_1_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln516_2_fu_234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op37_read_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal trunc_ln517_fu_238_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln517_reg_336 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal trunc_ln517_2_fu_242_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln526_fu_246_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln526_reg_352 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln517_4_fu_249_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_phi_reg_pp0_iter0_empty_140_reg_117 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_p_in_reg_127 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_138_reg_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_138_reg_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_139_reg_147 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_139_reg_147 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_reg_157 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_reg_157 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_137_reg_167 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_137_reg_167 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_fu_70 : STD_LOGIC_VECTOR (12 downto 0);
    signal x_5_fu_205_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal zext_ln511_fu_211_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub40_cast56_cast_fu_187_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_212 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component system_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component system_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_empty_137_reg_167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln516_2_reg_322 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_empty_137_reg_167 <= ap_phi_reg_pp0_iter1_empty_139_reg_147;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln516_2_reg_322 = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter1_empty_137_reg_167 <= trunc_ln517_4_fu_249_p1;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter1_empty_137_reg_167 <= ap_phi_reg_pp0_iter0_empty_137_reg_167;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_138_reg_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_212)) then
                if (((or_ln516_1_reg_318 = ap_const_lv1_0) and (icmp_ln511_reg_292 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_138_reg_136 <= ap_phi_reg_pp0_iter0_empty_140_reg_117;
                elsif (((or_ln516_1_reg_318 = ap_const_lv1_1) and (icmp_ln511_reg_292 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_138_reg_136 <= img_dout(15 downto 8);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_138_reg_136 <= ap_phi_reg_pp0_iter0_empty_138_reg_136;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_139_reg_147_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_212)) then
                if (((or_ln516_1_reg_318 = ap_const_lv1_0) and (icmp_ln511_reg_292 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_139_reg_147 <= trunc_ln517_fu_238_p1;
                elsif (((or_ln516_1_reg_318 = ap_const_lv1_1) and (icmp_ln511_reg_292 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_empty_139_reg_147 <= trunc_ln517_2_fu_242_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_empty_139_reg_147 <= ap_phi_reg_pp0_iter0_empty_139_reg_147;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_empty_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln516_2_reg_322 = ap_const_lv1_0))) then 
                ap_phi_reg_pp0_iter1_empty_reg_157 <= ap_phi_reg_pp0_iter1_empty_138_reg_136;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln516_2_reg_322 = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter1_empty_reg_157 <= img_dout(15 downto 8);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                ap_phi_reg_pp0_iter1_empty_reg_157 <= ap_phi_reg_pp0_iter0_empty_reg_157;
            end if; 
        end if;
    end process;

    x_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln511_fu_199_p2 = ap_const_lv1_0))) then 
                    x_fu_70 <= x_5_fu_205_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_70 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln516_reg_314 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln516_fu_226_p2 = ap_const_lv1_0)))) then
                ap_phi_reg_pp0_iter0_empty_140_reg_117 <= img_dout(15 downto 8);
                ap_phi_reg_pp0_iter0_p_in_reg_127 <= img_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln511_fu_199_p2 = ap_const_lv1_0))) then
                cmp41_reg_296 <= cmp41_fu_215_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_138_reg_136 <= ap_phi_reg_pp0_iter1_empty_138_reg_136;
                empty_139_reg_147 <= ap_phi_reg_pp0_iter1_empty_139_reg_147;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                empty_140_reg_117 <= ap_phi_reg_pp0_iter0_empty_140_reg_117;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln511_reg_292 <= icmp_ln511_fu_199_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                img_read_reg_303 <= img_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                or_ln516_1_reg_318 <= or_ln516_1_fu_230_p2;
                or_ln516_2_reg_322 <= or_ln516_2_fu_234_p2;
                or_ln516_reg_314 <= or_ln516_fu_226_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                trunc_ln517_reg_336 <= trunc_ln517_fu_238_p1;
                trunc_ln526_reg_352 <= trunc_ln526_fu_246_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter0_stage1, ap_block_pp0_stage3_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage2_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, img_empty_n, ap_predicate_op52_read_state5)
    begin
                ap_block_pp0_stage0_11001 <= ((img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op52_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, img_empty_n, ap_predicate_op52_read_state5)
    begin
                ap_block_pp0_stage0_subdone <= ((img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_predicate_op52_read_state5 = ap_const_boolean_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, img_empty_n, icmp_ln511_reg_292, bytePlanes_plane0_full_n)
    begin
                ap_block_pp0_stage1_01001 <= (((bytePlanes_plane0_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln511_reg_292 = ap_const_lv1_0) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, img_empty_n, icmp_ln511_reg_292, bytePlanes_plane0_full_n)
    begin
                ap_block_pp0_stage1_11001 <= (((bytePlanes_plane0_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln511_reg_292 = ap_const_lv1_0) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, img_empty_n, icmp_ln511_reg_292, bytePlanes_plane0_full_n)
    begin
                ap_block_pp0_stage1_subdone <= (((bytePlanes_plane0_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln511_reg_292 = ap_const_lv1_0) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_empty_n, ap_predicate_op37_read_state3)
    begin
                ap_block_pp0_stage2_11001 <= ((img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op37_read_state3 = ap_const_boolean_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_empty_n, ap_predicate_op37_read_state3)
    begin
                ap_block_pp0_stage2_subdone <= ((img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_predicate_op37_read_state3 = ap_const_boolean_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, img_empty_n, ap_predicate_op44_read_state4)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_predicate_op44_read_state4 = ap_const_boolean_1) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, img_empty_n, ap_predicate_op44_read_state4)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_predicate_op44_read_state4 = ap_const_boolean_1) and (img_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(img_empty_n, icmp_ln511_reg_292)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((icmp_ln511_reg_292 = ap_const_lv1_0) and (img_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(img_empty_n, ap_predicate_op37_read_state3)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((img_empty_n = ap_const_logic_0) and (ap_predicate_op37_read_state3 = ap_const_boolean_1));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(img_empty_n, ap_predicate_op44_read_state4)
    begin
                ap_block_state4_pp0_stage3_iter0 <= ((ap_predicate_op44_read_state4 = ap_const_boolean_1) and (img_empty_n = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage0_iter1_assign_proc : process(img_empty_n, ap_predicate_op52_read_state5)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((img_empty_n = ap_const_logic_0) and (ap_predicate_op52_read_state5 = ap_const_boolean_1));
    end process;


    ap_block_state6_pp0_stage1_iter1_assign_proc : process(bytePlanes_plane0_full_n)
    begin
                ap_block_state6_pp0_stage1_iter1 <= (bytePlanes_plane0_full_n = ap_const_logic_0);
    end process;


    ap_condition_212_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
                ap_condition_212 <= ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln511_reg_292, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (icmp_ln511_reg_292 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;
    ap_phi_reg_pp0_iter0_empty_137_reg_167 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_138_reg_136 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_139_reg_147 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_empty_reg_157 <= "XXXXXXXX";

    ap_predicate_op37_read_state3_assign_proc : process(icmp_ln511_reg_292, or_ln516_reg_314)
    begin
                ap_predicate_op37_read_state3 <= ((icmp_ln511_reg_292 = ap_const_lv1_0) and (or_ln516_reg_314 = ap_const_lv1_1));
    end process;


    ap_predicate_op44_read_state4_assign_proc : process(icmp_ln511_reg_292, or_ln516_1_reg_318)
    begin
                ap_predicate_op44_read_state4 <= ((or_ln516_1_reg_318 = ap_const_lv1_1) and (icmp_ln511_reg_292 = ap_const_lv1_0));
    end process;


    ap_predicate_op52_read_state5_assign_proc : process(icmp_ln511_reg_292, or_ln516_2_reg_322)
    begin
                ap_predicate_op52_read_state5 <= ((icmp_ln511_reg_292 = ap_const_lv1_0) and (or_ln516_2_reg_322 = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_70, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_4 <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_x_4 <= x_fu_70;
        end if; 
    end process;


    bytePlanes_plane0_blk_n_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, bytePlanes_plane0_full_n, ap_block_pp0_stage1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            bytePlanes_plane0_blk_n <= bytePlanes_plane0_full_n;
        else 
            bytePlanes_plane0_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    bytePlanes_plane0_din <= ((((((ap_phi_reg_pp0_iter1_empty_reg_157 & ap_phi_reg_pp0_iter1_empty_137_reg_167) & empty_138_reg_136) & empty_139_reg_147) & empty_140_reg_117) & trunc_ln517_reg_336) & trunc_ln526_reg_352);

    bytePlanes_plane0_write_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            bytePlanes_plane0_write <= ap_const_logic_1;
        else 
            bytePlanes_plane0_write <= ap_const_logic_0;
        end if; 
    end process;

    cmp41_fu_215_p2 <= "1" when (signed(zext_ln511_fu_211_p1) < signed(sub40_cast56_cast_fu_187_p1)) else "0";
    icmp_ln511_fu_199_p2 <= "1" when (ap_sig_allocacmp_x_4 = trunc_ln496_1) else "0";

    img_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, img_empty_n, icmp_ln511_reg_292, ap_CS_fsm_pp0_stage3, ap_predicate_op44_read_state4, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, or_ln516_reg_314, ap_block_pp0_stage3, ap_block_pp0_stage0, or_ln516_2_reg_322)
    begin
        if ((((ap_predicate_op44_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln516_2_reg_322 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln516_reg_314 = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            img_blk_n <= img_empty_n;
        else 
            img_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln511_reg_292, ap_CS_fsm_pp0_stage3, ap_predicate_op44_read_state4, ap_CS_fsm_pp0_stage2, ap_predicate_op52_read_state5, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_predicate_op37_read_state3, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_predicate_op44_read_state4 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_predicate_op37_read_state3 = ap_const_boolean_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln511_reg_292 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_predicate_op52_read_state5 = ap_const_boolean_1)))) then 
            img_read <= ap_const_logic_1;
        else 
            img_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln516_1_fu_230_p2 <= (cmp43_2 or cmp41_reg_296);
    or_ln516_2_fu_234_p2 <= (icmp_ln501 or cmp41_reg_296);
    or_ln516_fu_226_p2 <= (cmp43_1 or cmp41_reg_296);
        sub40_cast56_cast_fu_187_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub40_cast56),14));

    trunc_ln517_2_fu_242_p1 <= img_dout(8 - 1 downto 0);
    trunc_ln517_4_fu_249_p1 <= img_dout(8 - 1 downto 0);
    trunc_ln517_fu_238_p1 <= ap_phi_reg_pp0_iter0_p_in_reg_127(8 - 1 downto 0);
    trunc_ln526_fu_246_p1 <= img_read_reg_303(16 - 1 downto 0);
    x_5_fu_205_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_4) + unsigned(ap_const_lv13_1));
    zext_ln511_fu_211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x_4),14));
end behav;
