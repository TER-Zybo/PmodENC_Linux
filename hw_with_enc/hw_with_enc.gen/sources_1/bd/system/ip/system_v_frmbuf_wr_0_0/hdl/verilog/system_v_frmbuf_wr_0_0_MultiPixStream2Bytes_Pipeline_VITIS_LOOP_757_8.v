// ==============================================================
// Generated by Vitis HLS v2023.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module system_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_757_8 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_dout,
        img_num_data_valid,
        img_fifo_cap,
        img_empty_n,
        img_read,
        p_lcssa128144,
        p_lcssa127141,
        trunc_ln741_2,
        bytePlanes_plane1_din,
        bytePlanes_plane1_num_data_valid,
        bytePlanes_plane1_fifo_cap,
        bytePlanes_plane1_full_n,
        bytePlanes_plane1_write,
        bytePlanes_plane0_din,
        bytePlanes_plane0_num_data_valid,
        bytePlanes_plane0_fifo_cap,
        bytePlanes_plane0_full_n,
        bytePlanes_plane0_write,
        VideoFormat_val,
        empty,
        icmp_ln745,
        cmp216_6,
        cmp216_5,
        cmp216_4,
        icmp16,
        cmp216_2,
        icmp13,
        sub213_cast58,
        cmp216,
        p_out,
        p_out_ap_vld,
        p_out1,
        p_out1_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] img_dout;
input  [2:0] img_num_data_valid;
input  [2:0] img_fifo_cap;
input   img_empty_n;
output   img_read;
input  [7:0] p_lcssa128144;
input  [7:0] p_lcssa127141;
input  [12:0] trunc_ln741_2;
output  [63:0] bytePlanes_plane1_din;
input  [10:0] bytePlanes_plane1_num_data_valid;
input  [10:0] bytePlanes_plane1_fifo_cap;
input   bytePlanes_plane1_full_n;
output   bytePlanes_plane1_write;
output  [63:0] bytePlanes_plane0_din;
input  [10:0] bytePlanes_plane0_num_data_valid;
input  [10:0] bytePlanes_plane0_fifo_cap;
input   bytePlanes_plane0_full_n;
output   bytePlanes_plane0_write;
input  [5:0] VideoFormat_val;
input  [0:0] empty;
input  [0:0] icmp_ln745;
input  [0:0] cmp216_6;
input  [0:0] cmp216_5;
input  [0:0] cmp216_4;
input  [0:0] icmp16;
input  [0:0] cmp216_2;
input  [0:0] icmp13;
input  [12:0] sub213_cast58;
input  [0:0] cmp216;
output  [7:0] p_out;
output   p_out_ap_vld;
output  [7:0] p_out1;
output   p_out1_ap_vld;

reg ap_idle;
reg img_read;
reg bytePlanes_plane1_write;
reg bytePlanes_plane0_write;
reg p_out_ap_vld;
reg p_out1_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
reg   [0:0] icmp_ln757_reg_668;
reg   [0:0] or_ln762_1_reg_696;
reg    ap_predicate_op63_read_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] or_ln762_6_reg_741;
reg    ap_predicate_op104_read_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_subdone;
reg    bytePlanes_plane1_blk_n;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] and_ln778_reg_687;
reg   [0:0] and_ln778_reg_687_pp0_iter1_reg;
reg    bytePlanes_plane0_blk_n;
reg    img_blk_n;
reg   [0:0] or_ln762_reg_683;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] or_ln762_2_reg_715;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] or_ln762_3_reg_724;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] or_ln762_4_reg_733;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] or_ln762_5_reg_737;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln762_7_reg_745;
reg   [7:0] in_pix_UV_reg_216;
reg   [7:0] in_pix_Y_reg_226;
reg   [7:0] in_pix_UV_1_reg_236;
reg   [7:0] in_pix_Y_1_reg_247;
reg   [7:0] in_pix_UV_2_reg_258;
reg   [7:0] in_pix_Y_2_reg_269;
reg   [7:0] in_pix_UV_3_reg_280;
reg   [7:0] in_pix_Y_3_reg_291;
reg   [7:0] in_pix_UV_4_reg_302;
reg   [7:0] in_pix_Y_4_reg_313;
reg   [7:0] in_pix_UV_5_reg_324;
reg   [7:0] in_pix_Y_5_reg_335;
reg    ap_predicate_op52_read_state2;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state10_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
reg    ap_predicate_op79_read_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_pp0_stage2_11001;
reg    ap_predicate_op90_read_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_predicate_op111_read_state9;
reg    ap_block_state9_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    ap_predicate_op71_read_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_predicate_op97_read_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
wire   [0:0] icmp_ln757_fu_437_p2;
reg   [0:0] icmp_ln757_reg_668_pp0_iter1_reg;
wire   [0:0] cmp214_fu_453_p2;
reg   [0:0] cmp214_reg_672;
wire   [0:0] or_ln762_fu_459_p2;
wire   [0:0] and_ln778_fu_471_p2;
wire   [7:0] trunc_ln763_fu_482_p1;
wire   [0:0] or_ln762_1_fu_486_p2;
wire   [7:0] trunc_ln763_2_fu_496_p1;
wire   [0:0] or_ln762_2_fu_500_p2;
wire   [7:0] trunc_ln763_4_fu_504_p1;
wire   [0:0] or_ln762_3_fu_508_p2;
wire   [7:0] trunc_ln763_6_fu_512_p1;
wire   [0:0] or_ln762_4_fu_516_p2;
wire   [0:0] or_ln762_5_fu_520_p2;
wire   [0:0] or_ln762_6_fu_524_p2;
wire   [0:0] or_ln762_7_fu_528_p2;
wire   [7:0] trunc_ln763_8_fu_532_p1;
wire   [7:0] trunc_ln763_11_fu_536_p1;
wire   [7:0] trunc_ln763_13_fu_540_p1;
reg    ap_block_pp0_stage7_11001;
wire   [7:0] trunc_ln763_15_fu_544_p1;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage1_subdone;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_reg_216;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_reg_226;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_1_reg_236;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_247;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_258;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_269;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_280;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_291;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_302;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_313;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_5_reg_324;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_UV_5_reg_324;
reg   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_5_reg_335;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_Y_5_reg_335;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_6_reg_346;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_346;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_6_reg_356;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_356;
reg   [7:0] ap_phi_mux_in_pix_UV_7_phi_fu_369_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_UV_7_reg_366;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_UV_7_reg_366;
reg   [7:0] ap_phi_mux_in_pix_Y_7_phi_fu_379_p4;
wire   [7:0] ap_phi_reg_pp0_iter0_in_pix_Y_7_reg_376;
reg   [7:0] ap_phi_reg_pp0_iter1_in_pix_Y_7_reg_376;
reg   [12:0] x_fu_100;
wire   [12:0] x_2_fu_443_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_x_1;
reg   [7:0] empty_104_fu_104;
reg   [7:0] empty_105_fu_108;
reg    ap_block_pp0_stage1_01001;
wire   [13:0] zext_ln757_fu_449_p1;
wire  signed [13:0] sub213_cast58_cast_fu_415_p1;
wire   [0:0] icmp_ln778_fu_465_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_732;
reg    ap_condition_736;
reg    ap_condition_739;
reg    ap_condition_742;
reg    ap_condition_745;
reg    ap_condition_748;
reg    ap_condition_751;
reg    ap_condition_754;
reg    ap_condition_757;
reg    ap_condition_760;
reg    ap_condition_418;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 x_fu_100 = 13'd0;
#0 empty_104_fu_104 = 8'd0;
#0 empty_105_fu_108 = 8'd0;
#0 ap_done_reg = 1'b0;
end

system_v_frmbuf_wr_0_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_736)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_1_reg_236 <= ap_phi_reg_pp0_iter0_in_pix_UV_reg_216;
        end else if ((1'b1 == ap_condition_732)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_1_reg_236 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_742)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_258 <= ap_phi_reg_pp0_iter0_in_pix_UV_1_reg_236;
        end else if ((1'b1 == ap_condition_739)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_258 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_748)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_280 <= ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_258;
        end else if ((1'b1 == ap_condition_745)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_280 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_754)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_302 <= ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_280;
        end else if ((1'b1 == ap_condition_751)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_302 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_760)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_reg_216 <= empty_105_fu_108;
        end else if ((1'b1 == ap_condition_757)) begin
            ap_phi_reg_pp0_iter0_in_pix_UV_reg_216 <= {{img_dout[15:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_736)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_247 <= ap_phi_reg_pp0_iter0_in_pix_Y_reg_226;
        end else if ((1'b1 == ap_condition_732)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_247 <= trunc_ln763_2_fu_496_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_742)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_269 <= ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_247;
        end else if ((1'b1 == ap_condition_739)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_269 <= trunc_ln763_4_fu_504_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_748)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_291 <= ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_269;
        end else if ((1'b1 == ap_condition_745)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_291 <= trunc_ln763_6_fu_512_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_754)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_313 <= ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_291;
        end else if ((1'b1 == ap_condition_751)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_313 <= trunc_ln763_8_fu_532_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((1'b1 == ap_condition_760)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_reg_226 <= empty_104_fu_104;
        end else if ((1'b1 == ap_condition_757)) begin
            ap_phi_reg_pp0_iter0_in_pix_Y_reg_226 <= trunc_ln763_fu_482_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_418)) begin
        if (((icmp_ln757_reg_668 == 1'd0) & (or_ln762_5_reg_737 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_in_pix_UV_5_reg_324 <= ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_302;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_in_pix_UV_5_reg_324 <= ap_phi_reg_pp0_iter0_in_pix_UV_5_reg_324;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln762_6_reg_741 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_346 <= ap_phi_reg_pp0_iter1_in_pix_UV_5_reg_324;
    end else if (((or_ln762_6_reg_741 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_346 <= {{img_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_346 <= ap_phi_reg_pp0_iter0_in_pix_UV_6_reg_346;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln762_7_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_UV_7_reg_366 <= {{img_dout[15:8]}};
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_in_pix_UV_7_reg_366 <= ap_phi_reg_pp0_iter0_in_pix_UV_7_reg_366;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_418)) begin
        if (((icmp_ln757_reg_668 == 1'd0) & (or_ln762_5_reg_737 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_in_pix_Y_5_reg_335 <= ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_313;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_in_pix_Y_5_reg_335 <= ap_phi_reg_pp0_iter0_in_pix_Y_5_reg_335;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln762_6_reg_741 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_356 <= ap_phi_reg_pp0_iter1_in_pix_Y_5_reg_335;
    end else if (((or_ln762_6_reg_741 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_356 <= trunc_ln763_13_fu_540_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_356 <= ap_phi_reg_pp0_iter0_in_pix_Y_6_reg_356;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln762_7_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_in_pix_Y_7_reg_376 <= trunc_ln763_15_fu_544_p1;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_phi_reg_pp0_iter1_in_pix_Y_7_reg_376 <= ap_phi_reg_pp0_iter0_in_pix_Y_7_reg_376;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_104_fu_104 <= p_lcssa127141;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_104_fu_104 <= ap_phi_mux_in_pix_Y_7_phi_fu_379_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_105_fu_108 <= p_lcssa128144;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_105_fu_108 <= ap_phi_mux_in_pix_UV_7_phi_fu_369_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln757_fu_437_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_100 <= x_2_fu_443_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_100 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln778_reg_687 <= and_ln778_fu_471_p2;
        and_ln778_reg_687_pp0_iter1_reg <= and_ln778_reg_687;
        cmp214_reg_672 <= cmp214_fu_453_p2;
        icmp_ln757_reg_668 <= icmp_ln757_fu_437_p2;
        icmp_ln757_reg_668_pp0_iter1_reg <= icmp_ln757_reg_668;
        or_ln762_reg_683 <= or_ln762_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln762_5_reg_737 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_phi_reg_pp0_iter0_in_pix_UV_5_reg_324 <= {{img_dout[15:8]}};
        ap_phi_reg_pp0_iter0_in_pix_Y_5_reg_335 <= trunc_ln763_11_fu_536_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        in_pix_UV_1_reg_236 <= ap_phi_reg_pp0_iter0_in_pix_UV_1_reg_236;
        in_pix_Y_1_reg_247 <= ap_phi_reg_pp0_iter0_in_pix_Y_1_reg_247;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        in_pix_UV_2_reg_258 <= ap_phi_reg_pp0_iter0_in_pix_UV_2_reg_258;
        in_pix_Y_2_reg_269 <= ap_phi_reg_pp0_iter0_in_pix_Y_2_reg_269;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        in_pix_UV_3_reg_280 <= ap_phi_reg_pp0_iter0_in_pix_UV_3_reg_280;
        in_pix_Y_3_reg_291 <= ap_phi_reg_pp0_iter0_in_pix_Y_3_reg_291;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        in_pix_UV_4_reg_302 <= ap_phi_reg_pp0_iter0_in_pix_UV_4_reg_302;
        in_pix_Y_4_reg_313 <= ap_phi_reg_pp0_iter0_in_pix_Y_4_reg_313;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_pix_UV_5_reg_324 <= ap_phi_reg_pp0_iter1_in_pix_UV_5_reg_324;
        in_pix_Y_5_reg_335 <= ap_phi_reg_pp0_iter1_in_pix_Y_5_reg_335;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        in_pix_UV_reg_216 <= ap_phi_reg_pp0_iter0_in_pix_UV_reg_216;
        in_pix_Y_reg_226 <= ap_phi_reg_pp0_iter0_in_pix_Y_reg_226;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        or_ln762_1_reg_696 <= or_ln762_1_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln762_2_reg_715 <= or_ln762_2_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln762_3_reg_724 <= or_ln762_3_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        or_ln762_4_reg_733 <= or_ln762_4_fu_516_p2;
        or_ln762_5_reg_737 <= or_ln762_5_fu_520_p2;
        or_ln762_6_reg_741 <= or_ln762_6_fu_524_p2;
        or_ln762_7_reg_745 <= or_ln762_7_fu_528_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (icmp_ln757_reg_668 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln757_reg_668_pp0_iter1_reg == 1'd0) & (or_ln762_7_reg_745 == 1'd0))) begin
        ap_phi_mux_in_pix_UV_7_phi_fu_369_p4 = ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_346;
    end else begin
        ap_phi_mux_in_pix_UV_7_phi_fu_369_p4 = ap_phi_reg_pp0_iter1_in_pix_UV_7_reg_366;
    end
end

always @ (*) begin
    if (((icmp_ln757_reg_668_pp0_iter1_reg == 1'd0) & (or_ln762_7_reg_745 == 1'd0))) begin
        ap_phi_mux_in_pix_Y_7_phi_fu_379_p4 = ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_356;
    end else begin
        ap_phi_mux_in_pix_Y_7_phi_fu_379_p4 = ap_phi_reg_pp0_iter1_in_pix_Y_7_reg_376;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_1 = 13'd0;
    end else begin
        ap_sig_allocacmp_x_1 = x_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane0_blk_n = bytePlanes_plane0_full_n;
    end else begin
        bytePlanes_plane0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane0_write = 1'b1;
    end else begin
        bytePlanes_plane0_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (1'd0 == and_ln778_reg_687_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane1_blk_n = bytePlanes_plane1_full_n;
    end else begin
        bytePlanes_plane1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'd0 == and_ln778_reg_687_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bytePlanes_plane1_write = 1'b1;
    end else begin
        bytePlanes_plane1_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op104_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (or_ln762_7_reg_745 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (or_ln762_5_reg_737 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln762_4_reg_733 == 1'd1)) | ((1'b0 == ap_block_pp0_stage4) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln762_3_reg_724 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln762_2_reg_715 == 1'd1)) | ((1'b0 == ap_block_pp0_stage2) & (ap_predicate_op63_read_state3 
    == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln757_reg_668 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln762_reg_683 == 1'd1)))) begin
        img_blk_n = img_empty_n;
    end else begin
        img_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op104_read_state8 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_predicate_op97_read_state7 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_predicate_op71_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op111_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_predicate_op90_read_state6 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_predicate_op63_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_predicate_op79_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & 
    (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op52_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_read = 1'b1;
    end else begin
        img_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln757_reg_668 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_out1_ap_vld = 1'b1;
    end else begin
        p_out1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln757_reg_668 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln778_fu_471_p2 = (icmp_ln778_fu_465_p2 & empty);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state9_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state9_pp0_stage0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage1_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage1_iter1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_pp0_stage1_iter0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state10_pp0_stage1_iter1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage4_iter0));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage5_iter0));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage6_iter0));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state7_pp0_stage6_iter0));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage7_iter0));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state8_pp0_stage7_iter0));
end

always @ (*) begin
    ap_block_state10_pp0_stage1_iter1 = ((bytePlanes_plane0_full_n == 1'b0) | ((1'd0 == and_ln778_reg_687_pp0_iter1_reg) & (bytePlanes_plane1_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op52_read_state2 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op63_read_state3 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op71_read_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op79_read_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op90_read_state6 == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((img_empty_n == 1'b0) & (ap_predicate_op97_read_state7 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((ap_predicate_op104_read_state8 == 1'b1) & (img_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter1 = ((img_empty_n == 1'b0) & (ap_predicate_op111_read_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_418 = ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_732 = ((1'b0 == ap_block_pp0_stage2_11001) & (or_ln762_1_reg_696 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_736 = ((1'b0 == ap_block_pp0_stage3_11001) & (or_ln762_1_reg_696 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_739 = ((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (or_ln762_2_reg_715 == 1'd1));
end

always @ (*) begin
    ap_condition_742 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln762_2_reg_715 == 1'd0));
end

always @ (*) begin
    ap_condition_745 = ((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (or_ln762_3_reg_724 == 1'd1));
end

always @ (*) begin
    ap_condition_748 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln762_3_reg_724 == 1'd0));
end

always @ (*) begin
    ap_condition_751 = ((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (or_ln762_4_reg_733 == 1'd1));
end

always @ (*) begin
    ap_condition_754 = ((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (or_ln762_4_reg_733 == 1'd0));
end

always @ (*) begin
    ap_condition_757 = ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (or_ln762_reg_683 == 1'd1));
end

always @ (*) begin
    ap_condition_760 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (or_ln762_reg_683 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter0_in_pix_UV_6_reg_346 = 'bx;

assign ap_phi_reg_pp0_iter0_in_pix_UV_7_reg_366 = 'bx;

assign ap_phi_reg_pp0_iter0_in_pix_Y_6_reg_356 = 'bx;

assign ap_phi_reg_pp0_iter0_in_pix_Y_7_reg_376 = 'bx;

always @ (*) begin
    ap_predicate_op104_read_state8 = ((or_ln762_6_reg_741 == 1'd1) & (icmp_ln757_reg_668 == 1'd0));
end

always @ (*) begin
    ap_predicate_op111_read_state9 = ((icmp_ln757_reg_668 == 1'd0) & (or_ln762_7_reg_745 == 1'd1));
end

always @ (*) begin
    ap_predicate_op52_read_state2 = ((icmp_ln757_reg_668 == 1'd0) & (or_ln762_reg_683 == 1'd1));
end

always @ (*) begin
    ap_predicate_op63_read_state3 = ((or_ln762_1_reg_696 == 1'd1) & (icmp_ln757_reg_668 == 1'd0));
end

always @ (*) begin
    ap_predicate_op71_read_state4 = ((icmp_ln757_reg_668 == 1'd0) & (or_ln762_2_reg_715 == 1'd1));
end

always @ (*) begin
    ap_predicate_op79_read_state5 = ((icmp_ln757_reg_668 == 1'd0) & (or_ln762_3_reg_724 == 1'd1));
end

always @ (*) begin
    ap_predicate_op90_read_state6 = ((icmp_ln757_reg_668 == 1'd0) & (or_ln762_4_reg_733 == 1'd1));
end

always @ (*) begin
    ap_predicate_op97_read_state7 = ((icmp_ln757_reg_668 == 1'd0) & (or_ln762_5_reg_737 == 1'd1));
end

assign bytePlanes_plane0_din = {{{{{{{{ap_phi_mux_in_pix_Y_7_phi_fu_379_p4}, {ap_phi_reg_pp0_iter1_in_pix_Y_6_reg_356}}, {in_pix_Y_5_reg_335}}, {in_pix_Y_4_reg_313}}, {in_pix_Y_3_reg_291}}, {in_pix_Y_2_reg_269}}, {in_pix_Y_1_reg_247}}, {in_pix_Y_reg_226}};

assign bytePlanes_plane1_din = {{{{{{{{ap_phi_mux_in_pix_UV_7_phi_fu_369_p4}, {ap_phi_reg_pp0_iter1_in_pix_UV_6_reg_346}}, {in_pix_UV_5_reg_324}}, {in_pix_UV_4_reg_302}}, {in_pix_UV_3_reg_280}}, {in_pix_UV_2_reg_258}}, {in_pix_UV_1_reg_236}}, {in_pix_UV_reg_216}};

assign cmp214_fu_453_p2 = (($signed(zext_ln757_fu_449_p1) < $signed(sub213_cast58_cast_fu_415_p1)) ? 1'b1 : 1'b0);

assign icmp_ln757_fu_437_p2 = ((ap_sig_allocacmp_x_1 == trunc_ln741_2) ? 1'b1 : 1'b0);

assign icmp_ln778_fu_465_p2 = ((VideoFormat_val == 6'd19) ? 1'b1 : 1'b0);

assign or_ln762_1_fu_486_p2 = (icmp13 | cmp214_reg_672);

assign or_ln762_2_fu_500_p2 = (cmp216_2 | cmp214_reg_672);

assign or_ln762_3_fu_508_p2 = (icmp16 | cmp214_reg_672);

assign or_ln762_4_fu_516_p2 = (cmp216_4 | cmp214_reg_672);

assign or_ln762_5_fu_520_p2 = (cmp216_5 | cmp214_reg_672);

assign or_ln762_6_fu_524_p2 = (cmp216_6 | cmp214_reg_672);

assign or_ln762_7_fu_528_p2 = (icmp_ln745 | cmp214_reg_672);

assign or_ln762_fu_459_p2 = (cmp216 | cmp214_fu_453_p2);

assign p_out = empty_105_fu_108;

assign p_out1 = empty_104_fu_104;

assign sub213_cast58_cast_fu_415_p1 = $signed(sub213_cast58);

assign trunc_ln763_11_fu_536_p1 = img_dout[7:0];

assign trunc_ln763_13_fu_540_p1 = img_dout[7:0];

assign trunc_ln763_15_fu_544_p1 = img_dout[7:0];

assign trunc_ln763_2_fu_496_p1 = img_dout[7:0];

assign trunc_ln763_4_fu_504_p1 = img_dout[7:0];

assign trunc_ln763_6_fu_512_p1 = img_dout[7:0];

assign trunc_ln763_8_fu_532_p1 = img_dout[7:0];

assign trunc_ln763_fu_482_p1 = img_dout[7:0];

assign x_2_fu_443_p2 = (ap_sig_allocacmp_x_1 + 13'd1);

assign zext_ln757_fu_449_p1 = ap_sig_allocacmp_x_1;

endmodule //system_v_frmbuf_wr_0_0_MultiPixStream2Bytes_Pipeline_VITIS_LOOP_757_8
